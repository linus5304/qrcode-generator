name: cd - deploy to eks

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.x"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

        # 4. Verify AWS Credentials (Optional Debugging Step)
      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: terraform apply
        working-directory: ./deployment/infrastructure
        env:
          TF_VAR_cluster_name: ${{ secrets.CLUSTER_NAME }}
          TF_VAR_ecr_registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          TF_VAR_ecr_repository_api: ${{ secrets.ECR_API_REPOSITORY }}
          TF_VAR_ecr_repository_frontend: ${{ secrets.ECR_FRONTEND_REPOSITORY }}
          TF_VAR_image_tag: ${{ github.sha }}
          TF_VAR_tags: '{"Terraform":"true","Environment":"production"}'
        run: |
          terraform init
          terraform validate
          terraform plan -lock=false -out=tfplan
          terraform apply -auto-approve -lock=false tfplan

      - name: terraform apply k8s resources
        working-directory: ./deployment/kubernetes
        env:
          TF_VAR_ecr_registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          TF_VAR_ecr_repository_api: ${{ secrets.ECR_API_REPOSITORY }}
          TF_VAR_ecr_repository_frontend: ${{ secrets.ECR_FRONTEND_REPOSITORY }}
          TF_VAR_image_tag: ${{ github.sha }}
        run: |
          terraform init
          terraform validate
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: verify api pods
        run: |
          kubectl get pods --selector=app=api --namespace=default

      - name: verify frontend pods
        run: |
          kubectl get pods --selector=app=frontend --namespace=default
